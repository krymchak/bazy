version: "2"
services:
    common_master_1:
        image: mysql:5.7.27
        container_name: ${MASTER_1_HOSTNAME}
        hostname: ${MASTER_1_HOSTNAME}
        ports: 
            - 3307:3306
        volumes:
            - ../conf/master1.cnf:/etc/mysql/conf.d/my.cnf:ro
            - ../data/master1:/var/lib/mysql:rw
            - /usr/share/zoneinfo/:/usr/share/zoneinfo/:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${MASTER_1_ROOT_PASSWORD}
            MYSQL_DATABASE: workingTime
        networks:
            replication_network:
                ipv4_address: ${MASTER_1_HOST_IP}
    common_master_2:
        container_name: ${MASTER_2_HOSTNAME}
        image: mysql:5.7.27
        hostname: ${MASTER_2_HOSTNAME}
        ports: 
            - 3308:3306
        volumes:
            - ../conf/master2.cnf:/etc/mysql/conf.d/my.cnf:ro
            - ../data/master2:/var/lib/mysql:rw
            - /usr/share/zoneinfo/:/usr/share/zoneinfo/:ro
        environment:
            MYSQL_ROOT_PASSWORD: ${MASTER_2_ROOT_PASSWORD}
            MYSQL_DATABASE: workingTime
        networks:
            replication_network:
                ipv4_address: ${MASTER_2_HOST_IP}
    replication:
        image: ubuntu:18.04
        volumes:
            - ../scripts:${REPL_SCRIPT_MOUNT_PATH}
        networks:
            - replication_network
        environment:
            MASTER_1_HOSTNAME: ${MASTER_1_HOSTNAME}
            MASTER_1_HOST_IP: ${MASTER_1_HOST_IP}
            MASTER_1_ROOT_USER: ${MASTER_1_ROOT_USER}
            MASTER_1_ROOT_PASSWORD: ${MASTER_1_ROOT_PASSWORD}

            MASTER_2_HOSTNAME: ${MASTER_2_HOSTNAME}
            MASTER_2_HOST_IP: ${MASTER_2_HOST_IP}
            MASTER_2_ROOT_USER: ${MASTER_2_ROOT_USER}
            MASTER_2_ROOT_PASSWORD: ${MASTER_2_ROOT_PASSWORD}
            
            REPL_USER: ${REPL_USER}
            REPL_PASSWORD: ${REPL_PASSWORD}

        command: bash ${REPL_SCRIPT_MOUNT_PATH}/master-2-master.sh
    app:
        build:
            context: .
            dockerfile: Dockerfile
        ports:
            - "18080:8080"
        networks:
            - replication_network
